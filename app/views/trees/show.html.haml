
%table#tree-view.table.table-bordered.table-striped
  %thead
    %th File or directory
    %th Changed
    %th Comment
    - if params[:enable_delete]
      %th Actions
  - @tree.contents.sort_by{|c| force_utf8(c.name).downcase}.each do |node|
    %tr{:class => cycle("odd", "even")}
      - if node.is_a? Grit::Tree
        %td.node.folder
          %i.icon-folder-close
          = link_to h(node.basename) + "/", hash_path(@ref, node.name, :tree)
      - elsif node.is_a? Grit::Submodule
        %td.node.submodule
          %a{:href => "#"}= h(node.basename)
      - else
        %td{:class => "node file #{class_for_filename(node.name)}"}
          %i.icon-file
          = link_to h(node.basename), hash_path(@ref, node.name, :blob)
      - if node.is_a? Grit::Submodule
        %td.meta
        %td.meta.commit_message
          submodule: #{h(node.url(@ref))}
      - else
        - if last_commit = commit_for_tree_path(@repository, node.name)
          %td.meta= last_commit.committed_date.to_s(:short)
          %td.meta.commit_message
            = link_to truncate(h(last_commit.message), 
                length: 75, omission: "&hellip;"), 
                commit_path(last_commit.id)
        - else
          %td.meta
          %td.meta.commit_message
        - if (node.is_a? Grit::Tree) or (node.is_a? Grit::Blob) and params[:enable_delete]
          %td
            %a.btn.btn-danger{href: hash_path(@ref, node.name, :remove)}
              %i.icon-white.icon-trash
              Delete
          